name: Unit Tests
on: [push, pull_request]

jobs:
  build:
    name: Test my project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: UnityProject/Library
          key: Library-${{ runner.os }}-${{ hashFiles('UnityProject/Assets/**', 'UnityProject/ProjectSettings/**') }}
          restore-keys: |
            Library-${{ runner.os }}-

      - name: Generate .cjproj files
        uses: game-ci/unity-builder@v2
        env: 
          UNITY_SERIAL: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}          
        with:
          projectPath: 'UnityProject' 
          buildMethod: UnityEditor.SyncVS.SyncSolution

      # - name: Run Unity tests
      #   uses: game-ci/unity-test-runner@v4
      #   env:
      #     UNITY_SERIAL: ${{ secrets.UNITY_LICENSE }}
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #   with:
      #     projectPath: 'UnityProject'
      #     githubToken: ${{ secrets.GITHUB_TOKEN }}
      #     resultFiles: artifacts/*.xml
      
      # - name: Upload Unity test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: unity-test-results
      #     path: artifacts/*.xml

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore MyGameTests

      - name: Run Dotnet tests
        run: dotnet test MyGameTests --no-build --logger "trx;LogFileName=test-results.trx"

      - name: Upload Dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-test-results
          path: MyGameTests/TestResults/test-results.trx